@startuml uc07
title "Use Case #7: Encrypt Vault"

'Styling goes here
hide footbox
skinparam stereotypePosition bottom
skinparam sequenceMessageAlign direction
skinparam sequence {
	LifeLineBorderColor #Silver
	LifeLineBackgroundColor #Gainsboro
}

'Setup the objects involved here
actor User as u <<Actor>>
boundary App as a <<Boundary>>
boundary SaveVaultScreen as svs <<Boundary>>
boundary ProvideSecretsScreen as pss <<Boundary>>
control VaultManager as vm <<Control>>
entity Vault as v <<Entity>>
entity EVault as ev <<Entity>>
boundary DeviceStorage as ds <<Boundary>>

'Setup persistent objects here
activate u
activate a
activate vm
activate ds
activate v

'--- FLOW OF CONTROL STARTS HERE ---
'The user makes a change to the vault in some way.
u -> a: <makes some change to the vault>
a -> vm: edit()
vm -> v: edit()

'The user is prompted to provide a secret; can differ from the one previously provided.
a -> svs: show()
activate svs
svs -> svs: promptToSave()
u -> svs: clicks "Provide Secret"
svs -> pss: show()
activate pss
pss -> pss: promptForSecret()

'The user provides a secret to encrypt the vault with.
u -> pss: provides secret, incl type
u -> pss: clicks "Confirm"
pss -> vm: provideUserSecret()
deactivate pss

'The device transforms the secret into an equivalent symmetric key.
vm -> vm: generateSymmetricKey()

'The symmetric key is used to encrypt the contents of the vault.
vm -> v: encrypt()
v -> ev: createEV()
activate ev

'The encrypted vault is saved to local device storage.
vm -> ev: saveToDevice()
ev -> ds: saveToDevice()
deactivate ev

'The old vault is deleted, if one already exists.
ds -> ds: deleteEVIfExists()

'Cleanup
ds -> vm: informSuccessfulSave()
vm -> svs: informSuccessfulSave()
svs -> svs: showSaveSuccessful()
u -> svs: clicks "Ok"
deactivate svs
'--- FLOW OF CONTROL ENDS HERE   ---

@enduml
