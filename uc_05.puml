@startuml uc05
title "Use Case #5: Decrypt Vault"

'Styling goes here
hide footbox
skinparam stereotypePosition bottom
skinparam sequenceMessageAlign direction
skinparam sequence {
	LifeLineBorderColor #Silver
	LifeLineBackgroundColor #Gainsboro
}

'Setup the objects involved here
actor User as u <<Actor>>
boundary App as a <<Boundary>>
boundary OpenVaultScreen as ovs <<Boundary>>
boundary ProvideSecretsScreen as pss <<Boundary>>
control VaultManager as vm <<Control>>
entity Vault as v <<Entity>>
entity EVault as ev <<Entity>>
boundary DeviceStorage as ds <<Boundary>>

'Setup persistent objects here
activate u
activate a
activate vm
activate ds

'--- FLOW OF CONTROL STARTS HERE ---
'User presents secret to the user interface.
u -> a: <triggers app to \nprompt for secrets>

'The user is prompted to provide a secret; can differ from the one previously provided.
a -> ovs: show()
activate ovs
ovs -> u: promptToOpen
u -> ovs: clicks "Provide Secret"
ovs -> pss: show()
activate pss
pss -> u: promptForSecret

'The user provides a secret to decrypt the vault with.
u -> pss: provides secret, incl type
u -> pss: clicks "Confirm"
pss -> vm: provideUserSecret()
deactivate pss

'The secret is converted into its equivalent symmetric key.
vm -> vm: generateSymmetricKey()

'The vault is decrypted using the symmetric key.
vm -> ds: loadEV()
ds --> ev: create: EVault object
activate ev
ev --> vm: return: EVault object
vm -> ev: decrypt()

'The vault is loaded into memory as the transient in-memory vault.
ev --> v: create: Vault object
activate v
v --> vm: return: decrypt successful
vm -> ev: destroy()
deactivate ev
vm --> ovs: return: decrypt successful

'Cleanup
ovs -> u: showDecryptSuccessful
u -> ovs: clicks "Ok"
deactivate ovs
'--- FLOW OF CONTROL ENDS HERE   ---

@enduml
