@startuml uc06
title "Use Case #6: Delete Account"

'Styling goes here
hide footbox
skinparam stereotypePosition bottom
skinparam sequenceMessageAlign direction
skinparam sequence {
	LifeLineBorderColor #Silver
	LifeLineBackgroundColor #Gainsboro
}

'Add a legend plus styling
skinparam legend {
	backgroundColor #GhostWhite
	entrySeparator #GhostWhite
}

legend top
	<#GhostWhite,#GhostWhite>|	|= __Legend__ |
	|<#red> | Clientside|
	|<#silver> | Serverside|
endlegend

'Setup the objects
actor User as u <<Actor>> #red
boundary App as a <<Boundary>> #red
boundary UserSettingsScreen as uss <<Boundary>> #red
control VaultManager as vm <<Control>> #red
entity Vault as v <<Entity>> #red
control DeleteUserRoute as dur <<Control>> #silver
control DatabaseManager as db <<Control>> #silver

'Setup persistent objects here
activate u
activate a
activate vm
activate v
activate dur
activate db

'--- FLOW OF CONTROL STARTS HERE ---
'User navigates to the "User Settings" page.
u -> a: User navigates to the \n"User Settings" page
a -> uss: show()
activate uss

'User clicks "Delete Account" button.
u -> uss: User clicks "Delete \nAccount" button
uss -> u: Warns the user that \nthis action cannot be \nundone
u -> uss: Clicks "yes" on the \nconfirmation prompt

'Users device sends a deletion request to the server.
uss -> dur: POST /api/users/delete json::{query}

'Server challenges user to verify the authenticity of the user.
'Server sends an email containing a link to confirm account deletion.
=="Use Case #8a: Challenge User - Email" is called to send a deletion link to the user==

'User receives the email and clicks the link to finish the process of deleting account
u --> dur: GET /api/challenges/:id/solve?sol=:payload&token=:token&next=deleteAcc

'Database manager marks the account for deletion and sends the user a notification via email
dur -> db: SET(token.subject.flags.should_purge = true,\n\ttoken.subject.flags.purge_by(\n\t\ttime.Now().Add(7, DAYS)\n\t)\n)

'Do cleanup serverside.
dur --> uss: RESP json::{deleteAccountSuccess}
uss -> vm: delete(vault)
vm -> v: destroy()
deactivate v
uss -> vm: destroy()
deactivate vm
uss --> a: return: deletion successful

'User is navigated to the “Sign Up” page.
deactivate uss
a -> a: forceLogout()

'Cleanup
note over a
	User is navigated back to the Sign Up page.
end note

note over db
	The account has been marked for deletion.
	Next time the server does an account purge,
	this user's account will be swept up and 
	deleted.
end note
'--- FLOW OF CONTROL ENDS HERE   ---

@enduml