@startuml uc06
title "Use Case #6: Delete Account"

'Styling goes here
hide footbox
skinparam stereotypePosition bottom
skinparam sequenceMessageAlign direction
skinparam sequence {
	LifeLineBorderColor #Silver
	LifeLineBackgroundColor #Gainsboro
}

'Add a legend plus styling
skinparam legend {
	backgroundColor #GhostWhite
	entrySeparator #GhostWhite
}

legend top
	<#GhostWhite,#GhostWhite>|	|= __Legend__ |
	|<#red> | Clientside|
	|<#silver> | Serverside|
endlegend

'Setup the objects
actor User as u <<Actor>> #red
boundary UserEmail as ue <<Boundary>> #red
boundary App as a <<Boundary>> #red
boundary UserSettingsScreen as uss <<Boundary>> #red
boundary DeleteUserRoute as dur <<Boundary>> 
control DatabaseManager as db <<Control>>
boundary Database as db <<Boundary>>

'Setup persistent objects here
activate u
activate a
activate db
activate ue

'--- FLOW OF CONTROL STARTS HERE ---

'User navigates to the "User settings page
u -> a: <user navigates to the User Settings page>
a -> uss: show()
activate uss

'User clicks "Delete Account" button
u -> uss: <user clicks "Delete Account" button>

'Users device sends a deletion request to the server
uss -> dur: POST /api/users/deleteuser json::{query}
activate dur

'Server challenges user to verify the authenticity of the user
=="Use Case #8: Challenge User" is called to verify the authenticity of the user==

'User recieves the email and clicks the link to finish the process of deleting account
dur -> ue: sendEmail(useremail, deleteAccountSuccessMessage)
ue -> dur: User uses email link to confirm deletion of their account
dur -> db: DELETE /api/users/deleteuser json::{query}

'Database manager marks the account for deletion and sends the user a notification via email
db -> db: Database manager marks account in the database for deletion

'Database manager sends notification email once account is marked for deletion
db --> dur: return: deleteAccountSuccess
deactivate uss

' NOTE: Not sure if this part is correct because route no longer exisis
dur --> a: RESP json::{deleteAccountSuccess}

note over a
  The account has been marked for deletion.
  User is navigated back to the Sign Up page.
end note

dur --> ue: sendEmail(useremail, deleteAccountSuccessMessage)
'--- FLOW OF CONTROL ENDS HERE   ---


@enduml