@startuml uc10
title "Use Case #10: Enter Conversation"

'Styling goes here
hide footbox
skinparam stereotypePosition bottom
skinparam sequenceMessageAlign direction
skinparam sequence {
	LifeLineBorderColor #Silver
	LifeLineBackgroundColor #Gainsboro
}

'Setup the objects involved here
Actor User as u <<Actor>>
boundary App as a <<Boundary>>
boundary ConversationWindow as cw <<Boundary>>
control ConversationManager as cm <<Control>>
control VaultManager as vm <<Control>>
control WSHandler as ws <<Control>>

'Setup persistent objects here
activate u
activate a
activate vm
activate ws

'--- FLOW OF CONTROL STARTS HERE ---
'User clicks on chat to load.
u -> a: Selects the conversation \nto enter

'User’s device loads the chat session from their vault.
a -> vm: loadConversation(cid) -> Conversation convo
vm --> cm: create: ConversationManager
activate cm
cm -> cm: loadSession()

'User’s device displays the chat page.
a -> cw: show()
activate cw

'User’s device restores saved chats from the vault.
cm -> vm: getMessages(convo.id) -> msgs[]
cm -> cw: insertSavedMessages(msgs)

== "Use Case #16: Receive Message" is called to pull down unread messages from the server ==

cm -> ws: connect(user.id, convo.id)

== "Use Case #16: Receive Message" is called whenever the websocket has a new message for this user ==
'--- FLOW OF CONTROL ENDS HERE   ---

@enduml